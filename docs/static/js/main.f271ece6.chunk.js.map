{"version":3,"sources":["logic/Hooks.js","logic/DataLogic.js","components/js/DataControls.js","components/js/Mapbox.js","logic/GraphLogic.js","components/js/HierarchicalGraph.js","components/js/AreaGraph.js","components/js/AppFrame.js","components/js/LoadScreen.js","logic/Reducers.js","serviceWorker.js","index.js","App.js"],"names":["useHoveredCP","hoveredCP","_useState5","useState","_useState6","Object","slicedToArray","lastMarker","setLastMarker","useEffect","d3","concat","transition","duration","attr","markerElement","select","node","addMarker","CP","mapbox","bounds","setDisplay","pos","mapboxgl","LngLat","lng","lat","popup","Popup","setHTML","roadName","id","startJunction","endJunction","_content","querySelector","addEventListener","type","payload","marker","Marker","setLngLat","setPopup","addTo","data","markers","push","getElement","append","on","extend","parseData","fetchResult","forEach","datum","count_point_id","CountPoint","road_name","roadType","road_type","latitude","longitude","regionID","region_id","authorityID","local_authority_id","linkLength","link_length_km","start_junction_road_name","end_junction_road_name","vehicleCounts","sumVehicles","all_motor_vehicles","pedal_cycles","sumGoods","all_hgvs","lgvs","sumHGVs","sumBusCoach","buses_and_coaches","sumCarsTaxis","cars_and_taxis","sumLGVs","sumHGV2Rigid","hgvs_2_rigid_axle","sumHGV3Artic","hgvs_3_or_4_articulated_axle","sumHGV3Rigid","hgvs_3_rigid_axle","sumHGV4Rigid","hgvs_4_or_more_rigid_axle","sumHGV5Artic","hgvs_5_articulated_axle","sumHGV6Artic","hgvs_6_articulated_axle","sumPush","sumMotorbike","two_wheeled_motor_vehicles","count","counts","year","Count","estimation_method","direction_of_travel","addDirection","values","filterData","CPs","filters","filter","matchesFilters","filterCounts","reduce","acc","addCounts","direction","vehicles","getCounts","VehicleCounts","sortAlphaNum","a","b","toString","regExAlpha","regExNum","aAlpha","replace","bAlpha","aNum","parseInt","bNum","_ref","classCallCheck","this","_this","keys","length","entries","hasOwnProperty","every","_ref2","_ref3","value","distance","deg2rad","d","Math","PI","phiA","phiB","delPhi","delLambda","A","pow","sin","cos","atan2","sqrt","latLngDistance","center","radius","parent","method","isEstimated","VehicleCount","name","children","arguments","undefined","subcounts","val","objectSpread","child","flatten","_this2","structure","_ref4","_ref5","key","createClass","_ref6","_ref7","defineProperty","total","_ref8","_ref9","addValue","get","each","hierarchy","FilterHolder","react_default","createElement","className","viewBox","style","transform","CPFilters","map","display","getCPOptions","Array","from","Set","sort","DataControls_FilterHolder","DataControls_FilterDropdown","title","options","DataControls_GeocoderFilter","x1","x2","y1","y2","strokeWidth","strokeDasharray","href","opacity","x","y","width","height","CountFilters","_ref3$showDate","showDate","_ref3$showDirection","showDirection","date","v","i","FilterDropdown","icon","active","setVal","onClick","onChange","ev","target","option","GeocoderFilter","searchBox","useRef","radiusRef","geoCoder","accessToken","_useState3","_useState4","setGeoCoder","gc","MapboxGeocoder","clearAndBlurOnEsc","flyTo","padding","left","top","bottom","right","max","window","innerWidth","current","appendChild","onAdd","result","useGeocoder","clear","ref","text","Mapbox","filteredData","_useState","_useState2","mapMarkers","setMapMarkers","Map","mapRef","setMapbox","container","addControl","NavigationControl","useMapbox","LngLatBounds","includes","getLngLat","remove","_ne","fitBounds","useMap","DataControls_CPFilters","tFadeIn","selection","tFadeOut","onMouseMove","call","onMouseOut","triggerEvent","event","label","apply","colours","drawLegend","frame","seriesLabels","t_slideIn","onContext","selectAll","join","enter","grp","colour","drawAxes","hoverable","tickSize","tickPadding","tickSizeOuter","tickFormat","innerHTML","calculateStacks","subgroups","stack","offset","stackedData","find","domain","range","drawStackedBars","graph","route","barLabels","graphData","lastIndex","goUp","preventDefault","_calculateStacks","toConsumableArray","nice","parentBounds","update","exit","tmpmax","series","tmp_y","bandwidth","group","reverse","drawAreaStacks","xLabels","_calculateStacks2","clamp","x0","round","invert","curve","y0","HierarchicalGraph","overloadWarn","setOverloadWarn","useMemo","view","graphNode","descendants","descendant","indexOf","preserveAspectRatio","fill","AreaGraph","sumDataMemo","years","sumData","AppSidebar","AppFrame","helpText","maximised","setMaximised","showHelp","setShowHelp","AppFrame_MaximiseButton","AppFrame_HelpButton","MaximiseButton","blend","setBlend","path","bind","useGesture","onHover","hovering","onDragStart","pathInterp","useCallback","assign","renderprops","t","to","config","tension","friction","HelpButton","_useState7","_useState8","LoadScreen","loading","props","useSpring","delay","carRef","car","wheelRotation","ease","carBob","smoke","random","bushSlide","react_spring_web","div","r","stroke","displayReducer","state","action","updateState","newState","Error","Boolean","location","hostname","match","ReactDOM","render","setData","setLoading","_useReducer","useReducer","_useReducer2","then","newData","LoadScreen_LoadScreen","js_Mapbox","AppFrame_AppSidebar","AppFrame_AppFrame","DataControls_CountFilters","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f271ece6.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\r\nimport * as d3 from 'd3'\r\n\r\nconst useMapbox = ({ accessToken, mapRef }) => {\r\n    const [mapbox, setMapbox] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current) return\r\n\r\n        mapboxgl.accessToken = accessToken\r\n\r\n        const map = new mapboxgl.Map({\r\n            container: mapRef.current,\r\n            style: 'mapbox://styles/jridley246/cjxi67z0i42vy1cldfj812u8x',\r\n        })\r\n\r\n        setMapbox(map)\r\n\r\n        map.addControl(new mapboxgl.NavigationControl(), 'bottom-left')\r\n        map.markers = []\r\n    }, [accessToken, mapRef])\r\n\r\n    return mapbox\r\n}\r\n\r\nconst useMap = (mapbox, mapMarkers, display, setDisplay) => {\r\n    useEffect(() => {\r\n        if (!mapbox || !mapMarkers) return\r\n\r\n        const bounds = new mapboxgl.LngLatBounds()\r\n\r\n        //Remove old markers\r\n        mapbox.markers.forEach(marker => {\r\n            if (!mapMarkers.includes(marker.data)) {\r\n                marker.data.marker = null\r\n                marker.remove()\r\n            } else {\r\n                bounds.extend(marker.getLngLat())\r\n            }\r\n        })\r\n        mapbox.markers = mapbox.markers.filter(marker => mapMarkers.includes(marker.data))\r\n\r\n        //Add new markers\r\n        mapMarkers.forEach(CP => !CP.marker && addMarker(CP, mapbox, bounds, setDisplay))\r\n        //Fit map to markers\r\n        bounds._ne &&\r\n            mapbox.fitBounds(bounds, {\r\n                padding: {\r\n                    left: 50,\r\n                    top: 50,\r\n                    bottom: 50,\r\n                    right: Math.max(window.innerWidth * 0.37, 650),\r\n                },\r\n                duration: 1000,\r\n            })\r\n    }, [mapbox, mapMarkers, setDisplay])\r\n}\r\n\r\nconst useGeocoder = (map, searchBox, accessToken, setDisplay, radiusRef) => {\r\n    const [geoCoder, setGeoCoder] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (!searchBox || !map) return\r\n\r\n        const gc = new MapboxGeocoder({\r\n            accessToken: accessToken,\r\n            mapboxgl: mapboxgl,\r\n            clearAndBlurOnEsc: false,\r\n            flyTo: {\r\n                padding: {\r\n                    left: 50,\r\n                    top: 50,\r\n                    bottom: 50,\r\n                    right: Math.max(window.innerWidth * 0.37, 650),\r\n                },\r\n            },\r\n        })\r\n\r\n        searchBox.current.appendChild(gc.onAdd(map))\r\n        setGeoCoder(gc)\r\n\r\n        gc.on('result', ev =>\r\n            setDisplay({\r\n                type: 'addFilter',\r\n                payload: ['distance', { ...ev.result, radius: radiusRef.current.value }],\r\n            }),\r\n        )\r\n        gc.on('clear', ev => setDisplay({ type: 'removeFilter', payload: 'distance' }))\r\n    }, [map, searchBox, radiusRef, accessToken, setDisplay])\r\n\r\n    return geoCoder\r\n}\r\n\r\nconst useHoveredCP = hoveredCP => {\r\n    const [lastMarker, setLastMarker] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (hoveredCP) {\r\n            d3.selectAll(`.Graph rect:not([class=\"${hoveredCP}\"])`)\r\n                .transition('fadehovered')\r\n                .duration(100)\r\n                .attr('opacity', 0.2)\r\n\r\n            const markerElement = d3\r\n                .selectAll(`.mapboxgl-marker[id=\"${hoveredCP}\"]`)\r\n                .select('svg')\r\n                .node()\r\n            setLastMarker(markerElement)\r\n\r\n            d3.select(markerElement)\r\n                .transition()\r\n                .duration(200)\r\n                .attr('transform', 'translate( 0, -8.75 )scale( 1.5 )')\r\n        } else {\r\n            d3.selectAll(`.StackedBar > .Data > g > rect`)\r\n                .transition('fadehovered')\r\n                .duration(50)\r\n                .attr('opacity', 1)\r\n\r\n            d3.select(lastMarker)\r\n                .transition()\r\n                .attr('transform', 'translate( 0, 0 )scale( 1 )')\r\n        }\r\n    }, [hoveredCP, lastMarker])\r\n}\r\n\r\nexport { useMap, useMapbox, useGeocoder, useHoveredCP }\r\n\r\nconst addMarker = (CP, mapbox, bounds, setDisplay) => {\r\n    const highlightCP = function() {\r\n        setDisplay({ type: 'setHoveredCP', payload: CP.id })\r\n    }\r\n    const unhighlightCP = function() {\r\n        setDisplay('clearHoveredCP')\r\n    }\r\n\r\n    const pos = new mapboxgl.LngLat(CP.lng, CP.lat)\r\n\r\n    const popup = new mapboxgl.Popup().setHTML(`\r\n                <div class=\"MapPopup\">\r\n                    <h1>Road: ${CP.roadName}</h1>\r\n                    <h2>ID: ${CP.id}</h2>\r\n                    ${CP.startJunction ? `<h3>From: ${CP.startJunction}</h3>` : ''}\r\n                    ${CP.endJunction ? `<h3>To: ${CP.endJunction}</h3>` : ''}\r\n                    <button id=\"focus\">\r\n                        Set Focus\r\n                    </button>\r\n                </div>\r\n            `)\r\n\r\n    popup._content\r\n        .querySelector('#focus')\r\n        .addEventListener('click', () => setDisplay({ type: 'setFilter', payload: { id: CP.id } }))\r\n\r\n    const marker = new mapboxgl.Marker()\r\n        .setLngLat(pos)\r\n        .setPopup(popup)\r\n        .addTo(mapbox)\r\n\r\n    marker.data = CP\r\n    CP.marker = marker\r\n    mapbox.markers.push(marker)\r\n\r\n    //Add rect for input capture...default marker svg is messy for event handling\r\n    d3.select(marker.getElement())\r\n        .attr('id', CP.id)\r\n        .select('svg')\r\n        .append('rect')\r\n        .attr('x', 0)\r\n        .attr('y', 0)\r\n        .attr('width', '100%')\r\n        .attr('height', '100%')\r\n        .attr('fill', '#0000')\r\n        .on('mouseenter', highlightCP)\r\n        .on('mouseout', unhighlightCP)\r\n\r\n    bounds.extend(pos)\r\n}\r\n","import * as d3 from 'd3'\r\n\r\n//data structure:\r\n//[\r\n//    CountPoint: [\r\n//        Count:\r\n//            VehicleCounts: [\r\n//                VehicleCount,\r\n//                VehicleCount,\r\n//                ...\r\n//            ],\r\n//        Count:\r\n//            VehicleCounts: [...],\r\n//        ...\r\n//    ],\r\n//    CountPoint: ...\r\n//]\r\n\r\nexport const parseData = fetchResult => {\r\n    let data = {}\r\n\r\n    fetchResult.forEach(datum => {\r\n        if (!data[datum.count_point_id]) {\r\n            data[datum.count_point_id] = new CountPoint({\r\n                roadName: datum.road_name,\r\n                id: datum.count_point_id,\r\n                roadType: datum.road_type,\r\n                lat: +datum.latitude,\r\n                lng: +datum.longitude,\r\n                regionID: datum.region_id,\r\n                authorityID: datum.local_authority_id,\r\n                linkLength: datum.link_length_km,\r\n                startJunction: datum.start_junction_road_name,\r\n                endJunction: datum.end_junction_road_name,\r\n            })\r\n        }\r\n\r\n        const vehicleCounts = {\r\n            sumVehicles: +datum.all_motor_vehicles + +datum.pedal_cycles,\r\n            sumGoods: +datum.all_hgvs + +datum.lgvs,\r\n            sumHGVs: datum.all_hgvs,\r\n            sumBusCoach: datum.buses_and_coaches,\r\n            sumCarsTaxis: datum.cars_and_taxis,\r\n            sumLGVs: datum.lgvs,\r\n            sumHGV2Rigid: datum.hgvs_2_rigid_axle,\r\n            sumHGV3Artic: datum.hgvs_3_or_4_articulated_axle,\r\n            sumHGV3Rigid: datum.hgvs_3_rigid_axle,\r\n            sumHGV4Rigid: datum.hgvs_4_or_more_rigid_axle,\r\n            sumHGV5Artic: datum.hgvs_5_articulated_axle,\r\n            sumHGV6Artic: datum.hgvs_6_articulated_axle,\r\n            sumPush: datum.pedal_cycles,\r\n            sumMotorbike: datum.two_wheeled_motor_vehicles,\r\n        }\r\n\r\n        const count =\r\n            data[datum.count_point_id].counts[datum.year] ||\r\n            new Count(data[datum.count_point_id], datum.year, datum.estimation_method, datum.direction_of_travel)\r\n\r\n        data[datum.count_point_id].counts[datum.year] = count\r\n\r\n        count.addDirection(datum.direction_of_travel, vehicleCounts)\r\n    })\r\n\r\n    data = Object.values(data)\r\n    return data\r\n}\r\n\r\nexport const filterData = (CPs, filters) => CPs.filter(CP => CP.matchesFilters(filters))\r\n\r\nexport const filterCounts = (CP, filters) => {\r\n    let counts = Object.values(CP.counts)\r\n\r\n    if (filters.year) counts = counts.filter(count => count.year === filters.year)\r\n\r\n    return counts.reduce(\r\n        (acc, year) => acc.addCounts(filters.direction || 'Total', year.vehicles.getCounts(filters.direction)),\r\n        new VehicleCounts(CP),\r\n    )\r\n}\r\n\r\nexport const sortAlphaNum = (a, b) => {\r\n    a = a.toString()\r\n    b = b.toString()\r\n\r\n    const regExAlpha = /[^a-zA-Z]/g\r\n    const regExNum = /[^0-9]/g\r\n    const aAlpha = a.replace(regExAlpha, '')\r\n    const bAlpha = b.replace(regExAlpha, '')\r\n\r\n    if (aAlpha === bAlpha) {\r\n        const aNum = parseInt(a.replace(regExNum, ''), 10)\r\n        const bNum = parseInt(b.replace(regExNum, ''), 10)\r\n\r\n        return aNum === bNum ? 0 : aNum > bNum ? 1 : -1\r\n    } else {\r\n        return aAlpha > bAlpha ? 1 : -1\r\n    }\r\n}\r\n\r\nexport const latLngDistance = (a, b) => {\r\n    const deg2rad = d => (d * Math.PI) / 180\r\n    const R = 6371e3 //Earth's radius\r\n    const phiA = deg2rad(a[1])\r\n    const phiB = deg2rad(b[1])\r\n    const delPhi = deg2rad(b[1] - a[1])\r\n    const delLambda = deg2rad(b[0] - a[0])\r\n\r\n    const A = Math.pow(Math.sin(delPhi / 2), 2) + Math.cos(phiA) * Math.cos(phiB) * Math.pow(Math.sin(delLambda / 2), 2)\r\n    const C = 2 * Math.atan2(Math.sqrt(A), Math.sqrt(1 - A))\r\n\r\n    return R * C\r\n}\r\n\r\nclass CountPoint {\r\n    constructor({ roadName, id, roadType, lat, lng, regionID, authorityID, linkLength, startJunction, endJunction }) {\r\n        this.roadName = roadName\r\n        this.id = id.toString()\r\n        this.roadType = roadType\r\n        this.lat = lat\r\n        this.lng = lng\r\n        this.regionID = regionID.toString()\r\n        this.authorityID = authorityID.toString()\r\n        this.linkLength = linkLength\r\n        this.startJunction = startJunction\r\n        this.endJunction = endJunction\r\n        this.counts = {}\r\n    }\r\n\r\n    matchesFilters(filters) {\r\n        return (\r\n            (Object.keys(filters).length > 0\r\n                ? Object.entries(filters)\r\n                      .filter(filter => this.hasOwnProperty(filter[0]))\r\n                      .every(([filter, value]) => this[filter] === value)\r\n                : true) &&\r\n            (filters.distance\r\n                ? latLngDistance(filters.distance.center, [this.lng, this.lat]) < filters.distance.radius * 1000\r\n                : true)\r\n        )\r\n    }\r\n}\r\n\r\nclass Count {\r\n    constructor(parent, year, method) {\r\n        this.parent = parent\r\n        this.year = year.toString()\r\n        this.isEstimated = method === 'Estimated'\r\n        this.vehicles = new VehicleCounts(this)\r\n    }\r\n\r\n    addDirection(direction, counts) {\r\n        this.vehicles.addCounts(direction, counts)\r\n        return this\r\n    }\r\n}\r\n\r\nclass VehicleCount {\r\n    constructor(name, parent, children = {}) {\r\n        this.name = name\r\n        this.values = {}\r\n        this.subcounts = children\r\n        this.CP = parent\r\n    }\r\n\r\n    addValue(name, val) {\r\n        this.values[name] = this.values[name] ? this.values[name] + val : val\r\n        return this\r\n    }\r\n\r\n    get children() {\r\n        return Object.values(this.subcounts)\r\n    }\r\n\r\n    get total() {\r\n        return Object.values(this.values).reduce((acc, val) => acc + val, 0)\r\n    }\r\n\r\n    flatten() {\r\n        return {\r\n            ...this.subcounts,\r\n            ...this.children.reduce((acc, child) => ({ ...acc, ...child.flatten() }), {}),\r\n        }\r\n    }\r\n}\r\n\r\nexport class VehicleCounts {\r\n    constructor(CP) {\r\n        const structure = new VehicleCount('Total Vehicles', CP, {\r\n            sumGoods: new VehicleCount('Goods', CP, {\r\n                sumHGVs: new VehicleCount('HGVs', CP, {\r\n                    sumHGV6Artic: new VehicleCount('Six-axle Artic', CP),\r\n                    sumHGV5Artic: new VehicleCount('Five-axle Artic', CP),\r\n                    sumHGV4Rigid: new VehicleCount('Four-axle Rigid', CP),\r\n                    sumHGV3Rigid: new VehicleCount('Three-axle Rigid', CP),\r\n                    sumHGV3Artic: new VehicleCount('Three-axle Artic', CP),\r\n                    sumHGV2Rigid: new VehicleCount('Two-axle Rigid', CP),\r\n                }),\r\n                sumLGVs: new VehicleCount('LGVs', CP),\r\n            }),\r\n            sumPush: new VehicleCount('Pedal Cycles', CP),\r\n            sumMotorbike: new VehicleCount('Motorbikes', CP),\r\n            sumBusCoach: new VehicleCount('Buses and Coaches', CP),\r\n            sumCarsTaxis: new VehicleCount('Cars and Taxis', CP),\r\n        })\r\n\r\n        Object.entries({\r\n            sumVehicles: structure,\r\n            ...structure.flatten(),\r\n        }).forEach(([key, count]) => (this[key] = count))\r\n    }\r\n\r\n    getCounts(filter) {\r\n        return Object.entries(this).reduce(\r\n            (acc, [key, count]) => ({\r\n                ...acc,\r\n                [key]: filter ? count.values[filter] || 0 : count.total,\r\n            }),\r\n            {},\r\n        )\r\n    }\r\n\r\n    addCounts(name, vehicleCounts) {\r\n        Object.entries(this).forEach(([key, count]) => vehicleCounts[key] && count.addValue(name, +vehicleCounts[key]))\r\n        return this\r\n    }\r\n\r\n    get hierarchy() {\r\n        return d3.hierarchy(this.sumVehicles).each(node => (node.data.hierarchy = node))\r\n    }\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { sortAlphaNum } from '../../logic/DataLogic.js'\r\nimport { useGeocoder } from '../../logic/Hooks.js'\r\nimport '../css/DataControls.scss'\r\n\r\nconst FilterHolder = ({ children, id }) => {\r\n    return (\r\n        <div className=\"component-filterHolder\" id={id}>\r\n            <div>\r\n                <svg viewBox=\"0 0 100 100\">\r\n                    <g style={{ transform: 'translate(50%,50%)' }}>\r\n                        <path d=\"M -7 -10 l -30 -30 h 74 l -30 30 l -5 45 l -6 5 Z\" />\r\n                    </g>\r\n                </svg>\r\n                <h1>Filters</h1>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const CPFilters = ({ data, map, display, setDisplay }) => {\r\n    const getCPOptions = key => (data ? Array.from(new Set(data.map(CP => CP[key]))).sort(sortAlphaNum) : ['NO DATA'])\r\n\r\n    return (\r\n        <FilterHolder id=\"countPointFilters\">\r\n            <FilterDropdown\r\n                title=\"Count Point\"\r\n                id=\"id\"\r\n                options={getCPOptions('id')}\r\n                filters={display.filters}\r\n                setDisplay={setDisplay}\r\n            >\r\n                <path\r\n                    id=\"icon_marker\"\r\n                    d=\"M -25 0 a 30 30 0 1 1 50 0 l -25 40 l -25 -40 M -12.5 -15 a 12.5 12.5 0 0 0 25 0 a 12.5 12.5 0 0 0 -25 0\"\r\n                />\r\n            </FilterDropdown>\r\n            <GeocoderFilter filters={display.filters} map={map} setDisplay={setDisplay}>\r\n                <path\r\n                    id=\"icon_marker\"\r\n                    d=\"M -25 0 a 30 30 0 1 1 50 0 l -25 40 l -25 -40 M -12.5 -15 a 12.5 12.5 0 0 0 25 0 a 12.5 12.5 0 0 0 -25 0\"\r\n                    transform=\"translate(-15)\"\r\n                />\r\n                <line x1=\"-15\" x2=\"25\" y1=\"40\" y2=\"10\" strokeWidth=\"5\" strokeDasharray=\"6\" />\r\n                <use href=\"#icon_marker\" transform=\"translate(25,-10)scale(0.6)\" opacity=\"0.6\" />\r\n            </GeocoderFilter>\r\n            <FilterDropdown\r\n                title=\"Road Name\"\r\n                id=\"roadName\"\r\n                options={getCPOptions('roadName')}\r\n                filters={display.filters}\r\n                setDisplay={setDisplay}\r\n            >\r\n                <line x1=\"-20\" x2=\"-20\" y1=\"35\" y2=\"15\" strokeWidth=\"5\" />\r\n                <line x1=\"20\" x2=\"20\" y1=\"35\" y2=\"15\" strokeWidth=\"5\" />\r\n                <rect x=\"-40\" y=\"-35\" width=\"80\" height=\"50\" />\r\n                <text x=\"0\" y=\"2\">\r\n                    A66\r\n                </text>\r\n            </FilterDropdown>\r\n            <FilterDropdown\r\n                title=\"Road Type\"\r\n                id=\"roadType\"\r\n                options={getCPOptions('roadType')}\r\n                filters={display.filters}\r\n                setDisplay={setDisplay}\r\n            >\r\n                <path d=\"M -10 -40 h 7 l -1 20 h -8 Z\" />\r\n                <path d=\"M 10 -40 h -7 l 1 20 h 8 Z\" />\r\n                <path d=\"M -13 0 h 9 l -2 40 h -11 Z\" />\r\n                <path d=\"M 13 0 h -9 l 2 40 h 11 Z\" />\r\n                <path d=\"M -40 -15 h 80 v 10 h -7 q -3 0 -3 3 v 7 h -7 l -3 -7 q 0 -3 -3 -3 h -34 q -3 0 -3 3 l -3 7 h -7 v -7 q 0 -3 -3 -3 h -7 v -10\" />\r\n            </FilterDropdown>\r\n        </FilterHolder>\r\n    )\r\n}\r\n\r\nexport const CountFilters = ({ showDate = true, showDirection = true, data, display, setDisplay }) => {\r\n    const date = (\r\n        <FilterDropdown\r\n            title=\"Year\"\r\n            id=\"year\"\r\n            options={Array.from({ length: 19 }, (v, i) => (2000 + i).toString())}\r\n            filters={display.filters}\r\n            setDisplay={setDisplay}\r\n        >\r\n            <path\r\n                d={`M -30 -30 q -10 0 -10 10 v 50 q 0 10 10 10 h 60 q 10 0 10 -10 v -50 q 0 -10 -10 -10 h -5 a 10 10 0 0 0 -20 0 h -10 a 10 10 0 0 0 -20 0 h -5\r\n                      M -29 -14 h  13 v  12 h -13 v -12\r\n                      M -14 -14 h  13 v  12 h -13 v -12\r\n                      M  1  -14 h  13 v  12 h -13 v -12\r\n                      M  16 -14 h  13 v  12 h -13 v -12\r\n                      M -29  2  h  13 v  12 h -13 v -12\r\n                      M -14  2  h  13 v  12 h -13 v -12\r\n                      M  1   2  h  13 v  12 h -13 v -12\r\n                      M  16  2  h  13 v  12 h -13 v -12\r\n                      M -29  18 h  13 v  12 h -13 v -12\r\n                      M -14  18 h  13 v  12 h -13 v -12`}\r\n            />\r\n        </FilterDropdown>\r\n    )\r\n\r\n    const direction = (\r\n        <FilterDropdown\r\n            title=\"Direction\"\r\n            id=\"direction\"\r\n            options={['N', 'S', 'E', 'W']}\r\n            filters={display.filters}\r\n            setDisplay={setDisplay}\r\n        >\r\n            <path d={`M -45 0 a 45 45 0 0 0 90 0 a 45 45 0 0 0 -90 0 M 35 0 a 35 35 0 0 1 -70 0 a 35 35 0 0 1 70 0`} />\r\n            <path d={`M 0 34 l -10 -32 a 20 20 0 0 0 20 0 l -10 32`} transform=\"rotate(20)\" />\r\n            <path d={`M 0 34 l -10 -32 a 20 20 0 0 0 20 0 l -10 32`} transform=\"rotate(200)\" />\r\n        </FilterDropdown>\r\n    )\r\n\r\n    return (\r\n        <FilterHolder id=\"countFilters\">\r\n            {showDate ? date : null}\r\n            {showDirection ? direction : null}\r\n        </FilterHolder>\r\n    )\r\n}\r\n\r\nconst FilterDropdown = ({ children: icon, title, id, options, filters, setDisplay }) => {\r\n    let active = filters.hasOwnProperty(id)\r\n    const setVal = val => {\r\n        if (active) {\r\n            setDisplay({ type: `addFilter`, payload: [id, val] })\r\n        } else {\r\n            setDisplay({ type: `removeFilter`, payload: id })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`component-filterDropdown${active ? ' active' : ''}`}>\r\n            <div\r\n                className=\"header\"\r\n                onClick={() => {\r\n                    active = !active\r\n                    setVal(options[0])\r\n                }}\r\n            >\r\n                <svg viewBox=\"0 0 100 100\">\r\n                    <g style={{ transform: 'translate(50%,50%)' }}>{icon}</g>\r\n                </svg>\r\n            </div>\r\n            <select onChange={ev => setVal(ev.target.value)} value={filters[id] || ''}>\r\n                {options.map(option => (\r\n                    <option key={option} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <div\r\n                className=\"headerText\"\r\n                onClick={() => {\r\n                    active = !active\r\n                    setVal(options[0])\r\n                }}\r\n            >\r\n                <h1 className=\"title\">{title}</h1>\r\n                <h1 className=\"currentFilter\">{filters[id]}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GeocoderFilter = ({ children: icon, map, filters, setDisplay }) => {\r\n    let active = filters.hasOwnProperty('distance')\r\n    const searchBox = useRef(null)\r\n    const radiusRef = useRef(null)\r\n    const geoCoder = useGeocoder(\r\n        map,\r\n        searchBox,\r\n        'pk.eyJ1IjoianJpZGxleTI0NiIsImEiOiJjanhpMzYxdXcxbWliNDFsN2g2bGg3ODg2In0.qqSDB24vCq0mdKUCdY4zgw', //Just for demo, wouldn't do in production\r\n        setDisplay,\r\n        radiusRef,\r\n    )\r\n\r\n    const setVal = val => {\r\n        if (active) {\r\n            setDisplay({\r\n                type: `addFilter`,\r\n                payload: ['distance', filters.distance ? { ...filters.distance, radius: val } : null],\r\n            })\r\n        } else {\r\n            geoCoder.clear()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={`component-geoCoder${active ? ' active' : ''}`}>\r\n            <div\r\n                className=\"header\"\r\n                onClick={() => {\r\n                    active = !active\r\n                    setVal(5)\r\n                }}\r\n            >\r\n                <svg viewBox=\"0 0 100 100\">\r\n                    <g style={{ transform: 'translate(50%,50%)' }}>{icon}</g>\r\n                </svg>\r\n            </div>\r\n            <div className=\"geoCoder\" ref={searchBox}>\r\n                <select\r\n                    ref={radiusRef}\r\n                    onChange={ev => setVal(ev.target.value)}\r\n                    value={filters.distance ? filters.distance.radius : '5'}\r\n                >\r\n                    <option value=\"5\">&lt;5km</option>\r\n                    <option value=\"10\">&lt;10km</option>\r\n                    <option value=\"15\">&lt;15km</option>\r\n                </select>\r\n            </div>\r\n            <div\r\n                className=\"headerText\"\r\n                onClick={() => {\r\n                    active = !active\r\n                    setVal(5)\r\n                }}\r\n            >\r\n                <h1 className=\"title\">Distance</h1>\r\n                <h1 className=\"currentFilter\">{filters.distance ? filters.distance.text : ''}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useMapbox, useMap } from '../../logic/Hooks.js'\r\nimport { CPFilters } from './DataControls.js'\r\nimport '../css/Mapbox.scss'\r\n\r\nconst Mapbox = ({ children, data, filteredData, display, setDisplay }) => {\r\n    const [mapMarkers, setMapMarkers] = useState(null)\r\n    const map = useRef(null)\r\n\r\n    const Map = useMapbox({\r\n        accessToken: 'pk.eyJ1IjoianJpZGxleTI0NiIsImEiOiJjanhpMzYxdXcxbWliNDFsN2g2bGg3ODg2In0.qqSDB24vCq0mdKUCdY4zgw', //Just for this demo, wouldn't do this in production\r\n        mapRef: map,\r\n    })\r\n\r\n    useMap(Map, mapMarkers, display, setDisplay)\r\n\r\n    useEffect(() => {\r\n        if (!filteredData) return\r\n        setMapMarkers(filteredData)\r\n    }, [filteredData, display.filters])\r\n\r\n    return (\r\n        <div className=\"Mapbox\" ref={map}>\r\n            <CPFilters data={data} map={Map} display={display} setDisplay={setDisplay} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mapbox\r\n","import * as d3 from 'd3'\r\n\r\n//Animations\r\nconst tFadeIn = selection => {\r\n    selection\r\n        .transition('fade')\r\n        .duration(50)\r\n        .attr('opacity', 1)\r\n}\r\nconst tFadeOut = selection => {\r\n    selection\r\n        .transition('fade')\r\n        .duration(100)\r\n        .attr('opacity', 0.2)\r\n}\r\n\r\n//Mouse Event handlers\r\nconst onMouseMove = function(d) {\r\n    d3.selectAll(`.Graph .Data > *:not([class=\"${d.key}\"])`).call(tFadeOut)\r\n    d3.selectAll(`.Graph .Legend > g:not([id=\"${d.key}\"])`).call(tFadeOut)\r\n}\r\nconst onMouseOut = function() {\r\n    d3.selectAll('.Graph .Data > *, .Graph .Legend > g').call(tFadeIn)\r\n}\r\n\r\nconst triggerEvent = (d, event) => {\r\n    d3.select(`[class=\"${d.label}\"]`).each(function(d, i) {\r\n        d3.select(this)\r\n            .on(event)\r\n            .apply(this, [d, i])\r\n    })\r\n}\r\n\r\nconst colours = ['#527243', '#E6BD40', '#4B8783', '#CF8576', '#C1C4E3', '#A078F4']\r\n\r\nexport const drawLegend = (frame, { title, seriesLabels }) => {\r\n    //Draws linked legend with input event handlers\r\n    //Animations\r\n    const t_slideIn = function(selection) {\r\n        selection\r\n            .attr('x', 100)\r\n            .attr('opacity', 0)\r\n            .transition('fade')\r\n            .duration(200)\r\n            .attr('x', 0)\r\n            .attr('opacity', 1)\r\n    }\r\n\r\n    //Event Handlers\r\n    const onMouseMove = d => triggerEvent(d, 'mousemove')\r\n    const onMouseOut = d => triggerEvent(d, 'mouseout')\r\n    const onClick = d => triggerEvent(d, 'click')\r\n    const onContext = d => triggerEvent(d, 'contextmenu')\r\n\r\n    //Enter, update, exit\r\n    frame\r\n        .selectAll('g')\r\n        .data(seriesLabels, d => d.label)\r\n        .join(enter => {\r\n            const grp = enter\r\n                .append('g')\r\n                .attr('class', 'legendEntry')\r\n                .attr('id', d => d.label)\r\n                .attr('transform', (d, i) => `translate( 0, ${i * 25} )`)\r\n                .on('mousemove', onMouseMove)\r\n                .on('mouseout', onMouseOut)\r\n                .on('click', onClick)\r\n                .on('contextmenu', onContext)\r\n\r\n            grp.append('circle')\r\n                .attr('cx', '-12')\r\n                .attr('cy', -6)\r\n                .attr('r', 10)\r\n                .attr('fill', d => d.colour)\r\n                .call(t_slideIn)\r\n\r\n            grp.append('text')\r\n                .text(d => d.label)\r\n                .attr('fill', d => d.colour)\r\n                .call(t_slideIn)\r\n        })\r\n}\r\n\r\nexport const drawAxes = (frame, x, y, hoverable, setDisplay) => {\r\n    //Draws axes on graph, smooth transitions\r\n\r\n    y &&\r\n        frame\r\n            .select('.LeftAxis')\r\n            .transition()\r\n            .call(d3.axisLeft(y).tickSize(-600))\r\n\r\n    x &&\r\n        frame\r\n            .select('.BottomAxis')\r\n            .transition()\r\n            .call(\r\n                d3\r\n                    .axisBottom(x)\r\n                    .tickPadding([0])\r\n                    .tickSizeOuter([0])\r\n                    .tickFormat(d3.format('d')),\r\n            )\r\n            .on('end', () => {\r\n                frame\r\n                    .select('.BottomAxis')\r\n                    .selectAll('text')\r\n                    .attr('dx', -9)\r\n                    .on('mouseover', function() {\r\n                        hoverable &&\r\n                            setDisplay({\r\n                                type: 'setHoveredCP',\r\n                                payload: this.innerHTML,\r\n                            })\r\n                    })\r\n                    .on('mouseout', () => hoverable && setDisplay('clearHoveredCP'))\r\n            })\r\n}\r\n\r\nexport const calculateStacks = (data, offset = d3.stackOffsetNone) => {\r\n    //Calculates stacks based on data descendants, return array of subgroup names, stack data for plotting, and colour function\r\n    let subgroups, stack, colour\r\n\r\n    if (data.length === 0) {\r\n        return {\r\n            stackedData: [],\r\n            subgroups: [],\r\n            colour: () => {},\r\n        }\r\n    }\r\n\r\n    if (data[0].children) {\r\n        subgroups = data[0].children.map(child => child.data.name)\r\n\r\n        stack = d3\r\n            .stack()\r\n            .keys(subgroups)\r\n            .offset(offset)\r\n            .value((d, key) => d.children.find(child => child.data.name === key).data.total)\r\n    } else {\r\n        subgroups = [data[0].data.name]\r\n\r\n        stack = d3\r\n            .stack()\r\n            .keys(subgroups)\r\n            .offset(offset)\r\n            .value((d, key) => d.data.total)\r\n    }\r\n    colour = d3\r\n        .scaleOrdinal()\r\n        .domain(subgroups)\r\n        .range(colours)\r\n\r\n    return { stackedData: stack(data), subgroups: subgroups, colour: colour }\r\n}\r\n\r\nexport const drawStackedBars = (graph, bounds, [route, title], setDisplay, { barLabels, graphData, lastIndex }) => {\r\n    //Navigation functions\r\n    const drillDown = d => {\r\n        d[0].data.children && setDisplay({ type: 'setView', payload: ['descent', d.key] })\r\n    }\r\n    const goUp = d => {\r\n        d3.event.preventDefault()\r\n        graphData[0].parent &&\r\n            setDisplay({\r\n                type: 'setView',\r\n                payload: ['ascent', graphData[0].parent.data.name],\r\n            })\r\n    }\r\n\r\n    graph.select('.BG').on('contextmenu click', goUp)\r\n\r\n    const { stackedData, subgroups, colour } = calculateStacks(graphData)\r\n    const max = Math.max(...graphData.map(datum => datum.data.total))\r\n\r\n    //Scales\r\n    const x = d3\r\n        .scaleBand()\r\n        .domain(barLabels)\r\n        .range([bounds.left, bounds.width + bounds.left])\r\n        .padding([0.2])\r\n\r\n    const y = d3\r\n        .scaleLinear()\r\n        .domain([0, max])\r\n        .range([bounds.height + bounds.top, bounds.top])\r\n        .nice()\r\n\r\n    //If descending, initial [y0, y1] of parent rects for transition\r\n    const parentBounds = []\r\n\r\n    //--------------------\r\n    //Stacks\r\n\r\n    //Add new stack groups\r\n    graph\r\n        .select('.Data')\r\n        .selectAll('g')\r\n        .data(stackedData, d => d.key)\r\n        .join(\r\n            enter => {\r\n                const newGs = enter\r\n                    .append('g')\r\n                    .attr('class', d => d.key)\r\n                    .attr('fill', d => colour(d.key))\r\n\r\n                return newGs\r\n            },\r\n            update => update,\r\n            exit => {\r\n                if (route === 'descent') {\r\n                    //If drilling down, parent group is replaced, so need to store dimensions before removal\r\n                    exit.filter((d, i) => i === lastIndex)\r\n                        .selectAll('rect')\r\n                        .each(function() {\r\n                            parentBounds.push([+d3.select(this).attr('y'), +d3.select(this).attr('height')])\r\n                        })\r\n                }\r\n\r\n                exit.remove()\r\n            },\r\n        )\r\n        .on('mousemove', onMouseMove)\r\n        .on('mouseout', onMouseOut)\r\n        .on('click', drillDown)\r\n        .on('contextmenu', goUp)\r\n        //NEW RECTS\r\n        .selectAll('rect')\r\n        .data(d => d)\r\n        .join(enter => {\r\n            enter = enter.append('rect')\r\n\r\n            //Use stored parent rect dimensions for smooth transition in descendant rects\r\n            if (route === 'descent' && parentBounds[0]) {\r\n                enter.each(function(d, i) {\r\n                    const tmpmax = Math.max(...stackedData.map(series => series[i][1]))\r\n\r\n                    const tmp_y = d3\r\n                        .scaleLinear()\r\n                        .domain([0, tmpmax])\r\n                        .range([parentBounds[i][0] + parentBounds[i][1], parentBounds[i][0]])\r\n\r\n                    d3.select(this)\r\n                        .attr('y', tmp_y(d[1]))\r\n                        .attr('height', tmp_y(d[0]) - tmp_y(d[1]))\r\n                })\r\n            } else {\r\n                enter.attr('y', d => y(d[1])).attr('height', 0)\r\n            }\r\n\r\n            return enter\r\n        })\r\n        .attr('class', (d, i) => d.data.data.CP.id)\r\n        .attr('x', (d, i) => x(barLabels[i]))\r\n        .attr('width', x.bandwidth())\r\n        .transition('rectUpdate')\r\n        .duration(500)\r\n        .attr('y', d => y(d[1]))\r\n        .attr('height', d => y(d[0]) - y(d[1]))\r\n\r\n    //Update legend\r\n    drawLegend(graph.select('.Legend'), {\r\n        title: title,\r\n        seriesLabels: subgroups.map((group, i) => ({ label: group, colour: colour(group) })).reverse(),\r\n    })\r\n\r\n    //Update Axes\r\n    drawAxes(graph.select('.Axes'), x, y, true, setDisplay)\r\n}\r\n\r\nexport const drawAreaStacks = (graph, bounds, [route, title], setDisplay, { xLabels, graphData, lastIndex }) => {\r\n    //Navigation functions\r\n    const drillDown = d => {\r\n        d[0].data.children && setDisplay({ type: 'setView', payload: ['descent', d.key] })\r\n    }\r\n    const goUp = d => {\r\n        d3.event.preventDefault()\r\n        graphData[0].parent &&\r\n            setDisplay({\r\n                type: 'setView',\r\n                payload: ['ascent', graphData[0].parent.data.name],\r\n            })\r\n    }\r\n\r\n    graph.select('.BG').on('contextmenu click', goUp)\r\n\r\n    const { stackedData, subgroups, colour } = calculateStacks(graphData)\r\n    const max = Math.max(...graphData.map(datum => datum.data.total))\r\n\r\n    //Scales\r\n    const x = d3\r\n        .scaleLinear()\r\n        .domain([2000, 2018])\r\n        .range([bounds.left, bounds.width + bounds.left])\r\n\r\n    x.clamp(true)\r\n\r\n    const y = d3\r\n        .scaleLinear()\r\n        .domain([0, max])\r\n        .nice()\r\n        .range([bounds.height + bounds.top, bounds.top])\r\n\r\n    //Cursor\r\n    graph.on('mousemove.cursor', function() {\r\n        const x0 = Math.round(x.invert(d3.mouse(this)[0]))\r\n        const data = graphData[0].children\r\n            ? graphData[x0 - 2000].children.map(child => child.data.total)\r\n            : [graphData[x0 - 2000].data.total]\r\n\r\n        graph\r\n            .select('.Cursor > line')\r\n            .attr('x1', x(x0))\r\n            .attr('x2', x(x0))\r\n\r\n        graph.select('.Cursor_title').text(x0)\r\n\r\n        graph\r\n            .select('.Cursor > g')\r\n            .selectAll('text')\r\n            .data(subgroups)\r\n            .join('text')\r\n            .attr('y', (d, i) => i * 25)\r\n            .text((d, i) => d + ': ' + data[i])\r\n    })\r\n\r\n    //Draw areas\r\n    graph\r\n        .select('.Data')\r\n        .selectAll('path')\r\n        .data(stackedData, d => d.key)\r\n        .join(enter => {\r\n            const newAreas = enter\r\n                .append('path')\r\n                .attr('class', d => d.key)\r\n                .style('fill', d => colour(d.key))\r\n\r\n            return newAreas\r\n        })\r\n        .on('mousemove', onMouseMove)\r\n        .on('mouseout', onMouseOut)\r\n        .on('click', drillDown)\r\n        .on('contextmenu', goUp)\r\n        .transition()\r\n        .duration(500)\r\n        .attr(\r\n            'd',\r\n            d3\r\n                .area()\r\n                .curve(d3.curveMonotoneX)\r\n                .x((d, i) => x(xLabels[i]))\r\n                .y0(d => y(d[0]))\r\n                .y1(d => y(d[1])),\r\n        )\r\n\r\n    drawAxes(graph.select('.Axes'), x, y)\r\n\r\n    drawLegend(graph.select('.Legend'), {\r\n        title: '',\r\n        seriesLabels: subgroups.map((group, i) => ({ label: group, colour: colour(group) })).reverse(),\r\n    })\r\n}\r\n","import React, { useEffect, useState, useRef, useMemo } from 'react'\r\nimport { filterCounts } from '../../logic/DataLogic.js'\r\nimport { drawStackedBars } from '../../logic/GraphLogic.js'\r\nimport * as d3 from 'd3'\r\nimport '../css/Graphs.scss'\r\n\r\nexport default function HierarchicalGraph({ children, data, display, setDisplay }) {\r\n    const frame = useRef(null)\r\n    const [overloadWarn, setOverloadWarn] = useState(false)\r\n    const bounds = useMemo(\r\n        () => ({\r\n            top: 20,\r\n            left: 110,\r\n            height: 360,\r\n            width: 590,\r\n        }),\r\n        [],\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!data) return\r\n\r\n        const graph = d3.select(frame.current)\r\n\r\n        setOverloadWarn(data.length > 25)\r\n        if (data.length > 25) {\r\n            graph.selectAll('.StackedBar > .Data > g').remove()\r\n            return\r\n        }\r\n\r\n        drawStackedBars(\r\n            graph,\r\n            bounds,\r\n            display.view,\r\n            setDisplay,\r\n            data.reduce(\r\n                (acc, CP) => {\r\n                    const graphNode = filterCounts(CP, display.filters)\r\n                        .hierarchy.descendants()\r\n                        .find(descendant => descendant.data.name === display.view[1])\r\n\r\n                    acc.barLabels.push(CP.id)\r\n                    acc.graphData.push(graphNode)\r\n                    acc.lastIndex =\r\n                        acc.lastIndex === undefined\r\n                            ? graphNode.parent\r\n                                ? graphNode.parent.children.indexOf(graphNode)\r\n                                : 0\r\n                            : acc.lastIndex\r\n\r\n                    return acc\r\n                },\r\n                { barLabels: [], graphData: [], lastIndex: undefined },\r\n            ),\r\n        )\r\n    }, [data, display.filters, display.view, bounds, setDisplay])\r\n\r\n    return (\r\n        <div className=\"Graph HierarchicalGraph\">\r\n            <div className={`OverloadWarning${overloadWarn ? ' overload' : ''}`}>\r\n                <p>\r\n                    Phew, that's a lot of data...{data ? data.length : 0} Count Points to be exact!\r\n                    <br />\r\n                    Try applying more filters\r\n                </p>\r\n            </div>\r\n            {children}\r\n            <svg className=\"StackedBar\" viewBox=\"0 0 900 500\" preserveAspectRatio=\"xMidYMid\" ref={frame}>\r\n                <rect className=\"BG\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#0000\" />\r\n                <text className=\"Title\" transform={`translate(${bounds.left + bounds.width / 2})`}>\r\n                    Filtered Count Points Overview\r\n                </text>\r\n                <g className=\"Legend\" transform={`translate( ${bounds.left + bounds.width + 40}, 100 )`} />\r\n                <g className=\"Axes\">\r\n                    <text transform={`translate(25,${bounds.top + bounds.height / 2})rotate(-90)`}>Total Vehicles</text>\r\n                    <text transform={`translate(${bounds.left + bounds.width / 2},${bounds.top + bounds.height + 80})`}>\r\n                        Count Point ID\r\n                    </text>\r\n                    <g className=\"LeftAxis\" transform={`translate( ${bounds.left}, 0 )`} />\r\n                    <g className=\"BottomAxis\" transform={`translate( 0, ${bounds.height + bounds.top} )`} />\r\n                </g>\r\n                <g className=\"Data\" />\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useMemo } from 'react'\r\nimport { VehicleCounts, filterCounts } from '../../logic/DataLogic.js'\r\nimport { drawAreaStacks } from '../../logic/GraphLogic.js'\r\nimport * as d3 from 'd3'\r\nimport '../css/Graphs.scss'\r\n\r\nexport default function AreaGraph({ children, data, display, setDisplay }) {\r\n    const frame = useRef(null)\r\n    const bounds = useMemo(\r\n        () => ({\r\n            top: 20,\r\n            left: 110,\r\n            width: 590,\r\n            height: 360,\r\n        }),\r\n        [],\r\n    )\r\n\r\n    const sumDataMemo = useMemo(\r\n        () =>\r\n            data\r\n                ? Array.from({ length: 19 }, (v, i) => 2000 + i).map(year => {\r\n                      return data.reduce(\r\n                          (acc, CP) =>\r\n                              acc.addCounts(\r\n                                  'Total',\r\n                                  filterCounts(CP, {\r\n                                      year: year.toString(),\r\n                                      direction: display.filters.direction,\r\n                                  }).getCounts(),\r\n                              ),\r\n                          new VehicleCounts(),\r\n                      ).hierarchy\r\n                  })\r\n                : null,\r\n        [data, display.filters.direction],\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!sumDataMemo) return\r\n\r\n        const graph = d3.select(frame.current)\r\n        const years = Array.from({ length: 19 }, (v, i) => 2000 + i)\r\n        const sumData = sumDataMemo.map(node =>\r\n            node.descendants().find(descendant => descendant.data.name === display.view[1]),\r\n        )\r\n\r\n        drawAreaStacks(graph, bounds, display.view, setDisplay, {\r\n            xLabels: years,\r\n            graphData: sumData,\r\n            lastIndex: sumData.parent ? sumData.parent.children.indexOf(sumData) : 0,\r\n        })\r\n    }, [sumDataMemo, display.filters.direction, display.view, bounds, setDisplay])\r\n\r\n    return (\r\n        <div className=\"Graph AreaGraph\">\r\n            {children}\r\n            <svg className=\"StackedArea\" viewBox=\"0 0 900 500\" preserveAspectRatio=\"xMidYMid\" ref={frame}>\r\n                <rect className=\"BG\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"#0000\" />\r\n                <text className=\"Title\" transform={`translate(${bounds.left + bounds.width / 2})`}>\r\n                    Filtered Count Points over Time\r\n                </text>\r\n                <g className=\"Legend\" transform={`translate( ${bounds.left + bounds.width + 40}, 100 )`} />\r\n                <g className=\"Axes\">\r\n                    <text transform={`translate(22,${bounds.top + bounds.height / 2})rotate(-90)`}>Total Vehicles</text>\r\n                    <text transform={`translate(${bounds.left + bounds.width / 2},${bounds.top + bounds.height + 80})`}>\r\n                        Year\r\n                    </text>\r\n                    <g className=\"LeftAxis\" transform={`translate( ${bounds.left}, 0 )`} />\r\n                    <g className=\"BottomAxis\" transform={`translate( 0, ${bounds.height + bounds.top} )`} />\r\n                </g>\r\n                <g className=\"Data\" />\r\n                <g className=\"Cursor\">\r\n                    <line x1={bounds.left} x2={bounds.left} y1={bounds.top} y2={bounds.top + bounds.height} />\r\n                    <text className=\"Cursor_title\" transform={`translate( ${bounds.left + bounds.width + 20}, 275 )`} />\r\n                    <g transform={`translate( ${bounds.left + bounds.width + 20}, 300 )`} />\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useCallback, useRef } from 'react'\r\nimport { Spring } from 'react-spring/renderprops'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport * as d3 from 'd3'\r\nimport '../css/AppFrames.scss'\r\n\r\nexport const AppSidebar = ({ children }) => {\r\n    return <div className=\"component-AppSidebar\">{children}</div>\r\n}\r\n\r\nexport const AppFrame = ({ children, helpText }) => {\r\n    const [maximised, setMaximised] = useState(false)\r\n    const [showHelp, setShowHelp] = useState(false)\r\n\r\n    return (\r\n        <div className={`component-AppFrame${maximised ? ' fullscreen' : ''}`}>\r\n            <div id=\"layoutPlaceholder\" style={{ width: '100%', height: '100%' }} />\r\n            <div className=\"AppFrame_children\">{children}</div>\r\n            <div className={`Help${showHelp ? ' visible' : ''}`}>\r\n                <p>{helpText}</p>\r\n            </div>\r\n            <MaximiseButton maximised={maximised} setMaximised={setMaximised} />\r\n            <HelpButton showHelp={showHelp} setShowHelp={setShowHelp} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MaximiseButton = ({ maximised, setMaximised }) => {\r\n    const [blend, setBlend] = useState(0)\r\n    const path = useRef(null)\r\n\r\n    const bind = useGesture({\r\n        onHover: ({ hovering }) => {\r\n            setBlend(hovering ? 1 : 0)\r\n        },\r\n        onDragStart: () => setMaximised(!maximised),\r\n    })\r\n\r\n    const pathInterp = useCallback(\r\n        d3.interpolateString(\r\n            `M -10 0 L 0 0 L 0 10 M 0 10 L 0 0 L 10 0 M 10 0 L 0 0 L 0 -10 M 0 -10 L 0 0 L -10 0`,\r\n            `M -10 2 L -10 10 L -2 10 M 2 10 L 10 10 L 10 2 M 10 -2 L 10 -10 L 2 -10 M -2 -10 L -10 -10 L -10 -2`,\r\n        ),\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <div className=\"Maximise_Button\">\r\n            <svg viewBox=\"0 0 30 30\">\r\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" {...bind()} />\r\n                <Spring from={{ t: blend === 0 ? 1 : 0 }} to={{ t: blend }} config={{ tension: 360, friction: 24 }}>\r\n                    {({ t }) => <path ref={path} d={pathInterp(t)} transform=\"translate(15,15)\" />}\r\n                </Spring>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst HelpButton = ({ showHelp, setShowHelp }) => {\r\n    const [blend, setBlend] = useState(0)\r\n    const path = useRef(null)\r\n\r\n    const bind = useGesture({\r\n        onHover: ({ hovering }) => {\r\n            setBlend(hovering ? 1 : 0)\r\n            setShowHelp(hovering)\r\n        },\r\n    })\r\n\r\n    const pathInterp = useCallback(\r\n        d3.interpolateString(\r\n            `M -5 -10 c 17 -2 17 4 5 10 c 0 0 0 0 0 7 M -1 11 h 2`,\r\n            `M -2 4 c -20 -21 24 -21 4 0 c 0 8 -4 8 -4 0 M -2 4 h 4`,\r\n        ),\r\n        [],\r\n    )\r\n\r\n    return (\r\n        <div className=\"Help_Button\">\r\n            <svg viewBox=\"0 0 30 30\">\r\n                <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" {...bind()} />\r\n                <Spring from={{ t: blend === 0 ? 1 : 0 }} to={{ t: blend }} config={{ tension: 360, friction: 24 }}>\r\n                    {({ t }) => <path ref={path} d={pathInterp(t)} transform=\"translate(15,15)\" />}\r\n                </Spring>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport * as d3 from 'd3'\r\nimport '../css/LoadScreen.scss'\r\n\r\nexport const LoadScreen = ({ loading }) => {\r\n    const props = useSpring({\r\n        from: { opacity: loading ? 0 : 1 },\r\n        opacity: loading ? 1 : 0,\r\n        delay: 1000,\r\n    })\r\n    const carRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        if (!carRef.current) return\r\n\r\n        const car = d3.select(carRef.current)\r\n\r\n        ;(function wheelRotation() {\r\n            if (props.opacity.value === 0) return\r\n\r\n            car.selectAll('#load_car_wheel')\r\n                .attr('transform', 'rotate(0)')\r\n                .transition()\r\n                .duration(500)\r\n                .ease(d3.easeLinear)\r\n                .attr('transform', 'rotate(180)')\r\n                .on('end', wheelRotation)\r\n        })()\r\n        ;(function carBob() {\r\n            if (props.opacity.value === 0) return\r\n\r\n            car.selectAll('#load_car')\r\n                .attr('transform', 'translate( 160, 195 )')\r\n                .transition()\r\n                .attr('transform', 'translate( 160, 193 )')\r\n                .on('end', carBob)\r\n        })()\r\n        ;(function smoke() {\r\n            if (props.opacity.value === 0) return\r\n\r\n            car.selectAll('#load_car')\r\n                .transition('smokeLoop')\r\n                .duration(200)\r\n                .on('end', smoke)\r\n\r\n            car.selectAll('#load_car')\r\n                .append('circle')\r\n                .attr('id', 'load_car_smoke')\r\n                .attr('cx', 10)\r\n                .attr('cy', 0)\r\n                .attr('r', 5)\r\n                .attr('opacity', 1)\r\n                .transition()\r\n                .duration(1000)\r\n                .attr('cx', -50 * Math.random() - 50)\r\n                .attr('cy', -30 * Math.random() - 30)\r\n                .attr('r', 50)\r\n                .attr('opacity', 0)\r\n                .remove()\r\n        })()\r\n\r\n        function bushSlide() {\r\n            if (props.opacity.value === 0) return\r\n\r\n            d3.select(this)\r\n                .attr('transform', 'translate(700, 210)')\r\n                .transition()\r\n                .ease(d3.easeLinear)\r\n                .duration(4000 * Math.random() + 2000)\r\n                .attr('transform', 'translate(-100, 210)')\r\n                .on('end', () => bushSlide.bind(this)())\r\n        }\r\n\r\n        car.selectAll('#load_bush > g').each(bushSlide)\r\n    })\r\n\r\n    return (\r\n        <animated.div className=\"loadScreen\" style={props}>\r\n            <svg viewBox=\"0 0 600 214\" ref={carRef}>\r\n                <g id=\"load_road\">\r\n                    <rect x=\"0\" y=\"210\" width=\"100%\" height=\"2%\" />\r\n                    <g id=\"load_bush\">\r\n                        <g id=\"load_bush--1\" transform=\"translate(50,210)\">\r\n                            <path d=\"M 0 0 a 30 30 0 0 1 0 -50 a 30 30 0 0 1 45 -10 v 60 Z\" fill=\"#4CA134\" />\r\n                            <path d=\"M 44 -60 a 30 30 0 0 1 30 15 a 30 30 0 0 1 10 45 h -40 Z\" fill=\"#77BC1F\" />\r\n                        </g>\r\n                        <g id=\"load_bush--2\" transform=\"translate(400,210)\">\r\n                            <path d=\"M 0 0 a 40 40 0 0 1 20 -50 a 40 40 0 0 1 40 -30 v 80 Z\" fill=\"#7C8F29\" />\r\n                            <path d=\"M 59 -80 a 40 40 0 0 1 30 50 a 40 40 0 0 1 10 30 h -39 Z\" fill=\"#9BB53F\" />\r\n                        </g>\r\n                    </g>\r\n                    <g id=\"load_cloud\">\r\n                        <line id=\"load_cloud--1\" x1=\"200\" x2=\"400\" y1=\"30\" y2=\"30\" />\r\n                        <line id=\"load_cloud--2\" x1=\"240\" x2=\"500\" y1=\"40\" y2=\"40\" />\r\n                    </g>\r\n                </g>\r\n                <g id=\"load_car_wheels\" transform=\"translate(223,193)\">\r\n                    <g id=\"load_car_wheel\">\r\n                        <circle r=\"18\" id=\"load_car_wheel_outer\" />\r\n                        <circle r=\"10\" id=\"load_car_wheel_inner\" />\r\n                        <path d=\"M -10 0 h 20 M 0 -10 v 20\" />\r\n                        <path d=\"M -8 0 h 16 M 0 -8 v 16\" transform=\"rotate(45)\" />\r\n                    </g>\r\n                    <use href=\"#load_car_wheel\" transform=\"translate(144,0)\" />\r\n                </g>\r\n                <g id=\"load_car\">\r\n                    <path\r\n                        d={`M10 -10\r\n                            q 5 -10 0 -27\r\n                            l 42 -3\r\n                            q 7 -1 5 -5 l -3 -17\r\n                            q 55 -10 105 -5\r\n                            q 3 0 17 25\r\n                            l 63 5\r\n                            q 5 5 0 20\r\n                            q 8 5 2 16\r\n                            h -13\r\n                            a 22 22 0 1 0 -42 10\r\n                            h -105\r\n                            a 20 20 0 1 0 -38 -6\r\n                            q -15 0 -20 -4\r\n                            Z`}\r\n                    />\r\n                    <g id=\"load_car_windows\">\r\n                        <path d=\"M 67 -52 q -3 -4 4 -6 q 20 -3 30 -4 q 6 0 5 8 v 8 q 0 6 -5 6 h -20 q -5 0 -12 -10 Z\" />\r\n                        <path d=\"M 120 -62.5 l 28 0 v 22 h -33 q -2 0 -4 -5 v -13 q 0 -4 5 -4 Z\" />\r\n                        <path d=\"M 148 -62.5 q 4 0 6 4 l 8 11 q 5 6 -1 7 h -13\" />\r\n                    </g>\r\n                    <path d=\"M 13 -19 q 20 -3 100 -5 q 100 -1 118 -2 l 8 -10\" fill=\"none\" stroke=\"silver\" />\r\n                </g>\r\n            </svg>\r\n            <h1>Loading data...</h1>\r\n        </animated.div>\r\n    )\r\n}\r\n","export const displayReducer = (state, action) => {\r\n    const updateState = newState => ({ ...state, ...newState })\r\n\r\n    const { type, payload } = action instanceof Object ? action : { type: action }\r\n\r\n    switch (type) {\r\n        case 'setMulti':\r\n            return updateState(payload)\r\n        case 'addFilter':\r\n            return updateState({\r\n                filters: { ...state.filters, [payload[0]]: payload[1] },\r\n            })\r\n        case 'setFilter':\r\n            return updateState({ filters: payload })\r\n        case 'setView':\r\n            return updateState({ view: payload })\r\n        case 'removeFilter':\r\n            delete state.filters[payload]\r\n            return updateState({ filters: { ...state.filters } })\r\n        case 'clearFilters':\r\n            return updateState({ filters: {} })\r\n        case 'setHoveredCP':\r\n            return updateState({ hoveredCP: payload })\r\n        case 'clearHoveredCP':\r\n            return updateState({ hoveredCP: null })\r\n        default:\r\n            throw new Error('Display state: Action not recognised')\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","import React, { useState, useEffect, useReducer, useMemo } from 'react'\r\nimport Mapbox from './components/js/Mapbox.js'\r\nimport HierarchicalGraph from './components/js/HierarchicalGraph.js'\r\nimport AreaGraph from './components/js/AreaGraph.js'\r\nimport { CountFilters } from './components/js/DataControls.js'\r\nimport { AppSidebar, AppFrame } from './components/js/AppFrame.js'\r\nimport { LoadScreen } from './components/js/LoadScreen.js'\r\nimport { filterData, parseData } from './logic/DataLogic.js'\r\nimport { displayReducer } from './logic/Reducers.js'\r\nimport { useHoveredCP } from './logic/Hooks.js'\r\nimport * as d3 from 'd3'\r\nimport './App.scss'\r\n\r\nexport default function App() {\r\n    const [data, setData] = useState(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [display, setDisplay] = useReducer(displayReducer, { filters: {} })\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        d3.csv('./devon.csv').then(result => {\r\n            const newData = parseData(result)\r\n            setDisplay({\r\n                type: 'setMulti',\r\n                payload: {\r\n                    filters: { roadName: 'A30', direction: 'E' },\r\n                    view: ['', 'HGVs'],\r\n                    hoveredCP: null,\r\n                },\r\n            })\r\n            setData(newData)\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    useHoveredCP(display.hoveredCP)\r\n\r\n    const filteredData = useMemo(() => data && filterData(data, display.filters), [data, display.filters])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App_header\">\r\n                <h1>Devon Annual Average Daily Flows (AADFs)</h1>\r\n            </header>\r\n            <div className=\"page\">\r\n                <LoadScreen loading={loading} />\r\n                <Mapbox data={data} filteredData={filteredData} display={display} setDisplay={setDisplay} />\r\n                <AppSidebar>\r\n                    <AppFrame helpText=\"This is an overview of all the Count Points visible on the map. You can click any of the stacked elements or the legend keys to drill down into the data. Right click or just click an empty space to traverse back up again.\">\r\n                        <HierarchicalGraph data={filteredData} display={display} setDisplay={setDisplay}>\r\n                            <CountFilters data={data} display={display} setDisplay={setDisplay} />\r\n                        </HierarchicalGraph>\r\n                    </AppFrame>\r\n                    <AppFrame helpText=\"This shows the evolution of vehicle counts over time, summed over all currently visible Count Points. Like the Overview, you can click elements to navigate in and out of the data. You can use the cursor to see the values for a specific year.\">\r\n                        <AreaGraph data={filteredData} display={display} setDisplay={setDisplay}>\r\n                            <CountFilters showDate={false} data={data} display={display} setDisplay={setDisplay} />\r\n                        </AreaGraph>\r\n                    </AppFrame>\r\n                </AppSidebar>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}